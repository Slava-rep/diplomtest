# Generated by Django 5.1.7 on 2025-05-02 00:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SiAffectingfactors',
            fields=[
                ('id_affecting_factors', models.AutoField(db_column='id_affecting_factors', primary_key=True, serialize=False)),
                ('temperature', models.CharField(blank=True, max_length=255, null=True)),
                ('humidity', models.CharField(blank=True, max_length=255, null=True)),
                ('pressure', models.CharField(blank=True, max_length=255, null=True)),
                ('voltage', models.CharField(blank=True, max_length=255, null=True)),
                ('frequency', models.CharField(blank=True, max_length=255, null=True)),
                ('harmonic_coefficient', models.CharField(blank=True, max_length=255, null=True)),
                ('liquid_temperature', models.CharField(blank=True, max_length=255, null=True)),
                ('temperature_change', models.CharField(blank=True, max_length=255, null=True)),
                ('pressure_change_rate', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Влияющий фактор',
                'verbose_name_plural': 'Влияющие факторы',
                'db_table': 'affecting_factors',
            },
        ),
        migrations.CreateModel(
            name='SiMeasurementtype',
            fields=[
                ('id_measurement_type', models.AutoField(db_column='id_measurement_type', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
            ],
            options={
                'verbose_name': 'Вид измерений',
                'verbose_name_plural': 'Виды измерений',
                'db_table': 'measurement_types',
            },
        ),
        migrations.CreateModel(
            name='SiReference',
            fields=[
                ('id_reference', models.AutoField(db_column='id_reference', primary_key=True, serialize=False)),
                ('range', models.CharField(blank=True, max_length=255, null=True)),
                ('standard_type', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('fif_registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('country_of_manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacture_year', models.IntegerField(blank=True, null=True)),
                ('commissioning_year', models.IntegerField(blank=True, null=True)),
                ('inventory_number', models.CharField(blank=True, max_length=255, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_range', models.CharField(blank=True, max_length=255, null=True)),
                ('uncertainty', models.CharField(blank=True, max_length=255, null=True)),
                ('calibration_results_link', models.CharField(blank=True, max_length=255, null=True)),
                ('calibration_certificate_date', models.DateField(blank=True, null=True)),
                ('calibration_certificate_validity', models.DateField(blank=True, null=True)),
                ('calibration_certificate_number', models.CharField(blank=True, max_length=255, null=True)),
                ('ownership', models.CharField(blank=True, max_length=255, null=True)),
                ('installation_location', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Эталон',
                'verbose_name_plural': 'Эталоны',
                'db_table': 'references',
            },
        ),
        migrations.CreateModel(
            name='SiSitype',
            fields=[
                ('id_SI_type', models.AutoField(db_column='id_SI_type', primary_key=True, serialize=False)),
                ('gov_registry_number', models.CharField(blank=True, max_length=255, null=True)),
                ('si_name', models.CharField(blank=True, max_length=255, null=True)),
                ('type_designation', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('record_number', models.CharField(blank=True, max_length=255, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('description_document', models.TextField(blank=True, null=True)),
                ('calibration_method_document', models.TextField(blank=True, null=True)),
                ('procedure', models.CharField(default='Standard', max_length=255)),
                ('certificate_term', models.DateField(blank=True, null=True)),
                ('periodic_calibration', models.BooleanField(default=False)),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(default='active', max_length=255)),
            ],
            options={
                'verbose_name': 'Тип СИ',
                'verbose_name_plural': 'Типы СИ',
                'db_table': 'si_types',
            },
        ),
        migrations.CreateModel(
            name='SiVerificationmethod',
            fields=[
                ('id_verification_method', models.AutoField(db_column='id_verification_method', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('method_number', models.CharField(blank=True, db_column='method_number', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Методика поверки',
                'verbose_name_plural': 'Методики поверки',
                'db_table': 'verification_methods',
            },
        ),
        migrations.CreateModel(
            name='SiVerificationtype',
            fields=[
                ('id_verification_type', models.AutoField(db_column='id_verification_type', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
            ],
            options={
                'verbose_name': 'Вид поверки',
                'verbose_name_plural': 'Виды поверки',
                'db_table': 'verification_types',
            },
        ),
        migrations.CreateModel(
            name='SiSi',
            fields=[
                ('id_SI', models.AutoField(db_column='id_SI', primary_key=True, serialize=False)),
                ('registration_number', models.CharField(db_column='registration_number', max_length=255)),
                ('year_of_manufacture', models.IntegerField(db_column='year_of_manufacture')),
                ('modification', models.CharField(blank=True, db_column='modification', max_length=255, null=True)),
                ('serial_number', models.CharField(db_column='serial_number', max_length=255)),
                ('si_type_id', models.ForeignKey(db_column='si_type_id', on_delete=django.db.models.deletion.CASCADE, to='si.sisitype')),
            ],
            options={
                'verbose_name': 'Средство измерений',
                'verbose_name_plural': 'Средства измерений',
                'db_table': 'si',
            },
        ),
        migrations.AddField(
            model_name='sisitype',
            name='verification_method',
            field=models.ForeignKey(db_column='verification_method_id', on_delete=django.db.models.deletion.CASCADE, to='si.siverificationmethod'),
        ),
    ]
