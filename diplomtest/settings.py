"""
Django settings for diplomtest project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f0fn4y($fjphe#0-tz7q%pgpj&caus8f)#!&ct)g4c6en4-si6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

# INSTALLED_APPS = [
#     'users.apps.UsersConfig',  # Move users app to the top
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     # 'certificates.apps.CertificatesConfig',
#     'si',
#     'certificates',
#     'journals',
#     'crispy_forms',
#     'crispy_bootstrap5',
#     #'users',
#     'employees',
    
# ]
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'si.apps.SiConfig',
    'employees.apps.EmployeesConfig',
    'certificates.apps.CertificatesConfig',
    'journals.apps.JournalsConfig',
    'users.apps.UsersConfig',
    'utils.apps.UtilsConfig',
    'crispy_forms',
    'crispy_bootstrap5',
]


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'diplomtest.middleware.DatabaseConnectionMiddleware',  # Добавляем наш middleware
]

ROOT_URLCONF = 'diplomtest.urls'

import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [BASE_DIR / 'templates'], 
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'diplomtest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'vnikti2',      #vnikti
#         'USER': 'postgres',
#         'PASSWORD': '1111',
#         'HOST': '127.0.0.1',
#         # 'HOST': 'db',
#         # 'HOST': 'host.docker.internal',  # Доступ к хосту из контейнера
#         'PORT': '5432',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_NAME', 'vnikti2'),
        'USER': os.getenv('DATABASE_USER', 'postgres'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD', '1111'),
        'HOST': os.getenv('DATABASE_HOST', '127.0.0.1'),
        # 'HOST': os.getenv('DATABASE_HOST', 'db'),  # для  docker-compose up --build
        'PORT': os.getenv('DATABASE_PORT', '5432'),
        'CONN_MAX_AGE': 0,  # Закрывать соединение после каждого запроса
        'OPTIONS': {
            'client_encoding': 'UTF8',
            'connect_timeout': 10,
            'keepalives': 1,
            'keepalives_idle': 5,
            'keepalives_interval': 5,
            'keepalives_count': 5,
            'application_name': 'django_app',
            'options': '-c statement_timeout=60000 -c lock_timeout=60000',
        },
        'ATOMIC_REQUESTS': True,  # Автоматически оборачивать запросы в транзакции
        'CONN_HEALTH_CHECKS': True,  # Проверять здоровье соединения
        'DISABLE_SERVER_SIDE_CURSORS': True,  # Отключить серверные курсоры
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True
LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Europe/Moscow'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# STATICFILES_DIRS = [BASE_DIR / 'static'] # Статические файлы


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


DATE_FORMAT = 'd.m.Y'          # Формат для дат
DATE_INPUT_FORMATS = ['%d.%m.%Y','%d-%m-%Y', '%d/%m/%Y']  # Разрешенные форматы ввода

# Настройки для Select2
SELECT2_CSS = 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css'
SELECT2_JS = 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js'

USE_L10N = False  # Отключаем локализацию форматов

AUTH_USER_MODEL = 'users.CustomUser'  # Если используется кастомная модель

LOGIN_URL = 'login'
# LOGIN_REDIRECT_URL = 'si:list'  # или куда хотите редиректить после входа
# LOGOUT_REDIRECT_URL = 'login'
# Auth settings
LOGIN_REDIRECT_URL = 'si:home'
LOGOUT_REDIRECT_URL = 'si:home'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'fontTools': {
            'handlers': ['console'],
            'level': 'WARNING',  # Установите уровень WARNING, чтобы убрать DEBUG
            'propagate': False,
        },
        'weasyprint': {
            'handlers': ['console'],
            'level': 'WARNING',  # Установите уровень WARNING, чтобы убрать DEBUG
            'propagate': False,
        },
    },
}