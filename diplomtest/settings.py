"""
Django settings for diplomtest project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f0fn4y($fjphe#0-tz7q%pgpj&caus8f)#!&ct)g4c6en4-si6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'users.apps.UsersConfig',  # Move users app to the top
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'certificates.apps.CertificatesConfig',
    'si',
    'certificates',
    'journals',
    'crispy_forms',
    'crispy_bootstrap5',
    #'users',
    'employees',
    
]
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'diplomtest.urls'

import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [BASE_DIR / 'templates'], 
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'diplomtest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'vnikti2',      #vnikti
#         'USER': 'postgres',
#         'PASSWORD': '1111',
#         'HOST': '127.0.0.1',
#         # 'HOST': 'db',
#         # 'HOST': 'host.docker.internal',  # Доступ к хосту из контейнера
#         'PORT': '5432',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_NAME', 'vnikti2'),  # Имя вашей базы данных
        'USER': os.getenv('DATABASE_USER', 'postgres'),  # Пользователь PostgreSQL
        'PASSWORD': os.getenv('DATABASE_PASSWORD', '1111'),  # Пароль PostgreSQL
        # 'HOST': os.getenv('DATABASE_HOST', '127.0.0.1'),  # Локальный хост
        'HOST': os.getenv('DATABASE_HOST', 'db'),  # для  docker-compose up --build
        'PORT': os.getenv('DATABASE_PORT', '5432'),  # Порт PostgreSQL
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# STATICFILES_DIRS = [BASE_DIR / 'static'] # Статические файлы


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


DATE_FORMAT = 'd.m.Y'          # Формат для дат
DATE_INPUT_FORMATS = ['%d.%m.%Y','%d-%m-%Y', '%d/%m/%Y']  # Разрешенные форматы ввода

# Настройки для Select2
SELECT2_CSS = 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css'
SELECT2_JS = 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js'

USE_L10N = False  # Отключаем локализацию форматов

AUTH_USER_MODEL = 'users.CustomUser'  # Если используется кастомная модель

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'si:list'  # или куда хотите редиректить после входа
LOGOUT_REDIRECT_URL = 'login'


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#             'formatter': 'verbose',
#         },
#     },
#     'formatters': {
#         'verbose': {
#             'format': '%(levelname)s %(name)s %(message)s',
#         },
#     },
#     'loggers': {
#         # Логи самого Pisa
#         'xhtml2pdf': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#         # Логи ReportLab (если нужны)
#         'reportlab': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#     },
# }

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'fontTools': {
            'handlers': ['console'],
            'level': 'WARNING',  # Установите уровень WARNING, чтобы убрать DEBUG
            'propagate': False,
        },
        'weasyprint': {
            'handlers': ['console'],
            'level': 'WARNING',  # Установите уровень WARNING, чтобы убрать DEBUG
            'propagate': False,
        },
    },
}